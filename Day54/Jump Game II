class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        if(n==1)
        {
            return 0;//no jumps required!
        }
        int steps_left = nums[0];
        int max_reach = nums[0];
        int minjumps = 1;
        for(int i = 1;i<n-1;i++)
        {
            max_reach = max(max_reach,i+nums[i]);//decide whether we should take a jump 
            steps_left--;
            if(steps_left==0)
            {
                minjumps++;
                steps_left = max_reach-i;//update steps left acc to the new place where we have reached
            }
            if(steps_left<0)
            {
                return -1;
            }
        }
        if(max_reach>=n-1)
        {
            return minjumps;//we have been able to reach the destination
        }
        //else if we could not reach dest
        return -1;
    }
};
