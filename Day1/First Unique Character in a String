Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example 1:
Input: s = "leetcode"
Output: 0

Example 2:
Input: s = "loveleetcode"
Output: 2

Example 3:
Input: s = "aabb"
Output: -1
 
Constraints:
1 <= s.length <= 105
s consists of only lowercase English letters.
-------------------------------------------------------------------------------------------------
class Solution {
public:
    int firstUniqChar(string s) { //Time Complexity: O(n) 
        unordered_map<char,int> mp;//map to keep count of each character
        //key=character & value=frequency
        //first iteration over the array
        for(int i = 0;i<s.length();i++){
            char ch = s[i];
            mp[ch]++;
        }
        //second iteration over the array
        for(int i = 0;i<s.length();i++){
            if(mp[s[i]]==1)
            {
                return i;
            }
        }
        return -1;
    }
};
