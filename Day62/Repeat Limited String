class Solution {
public:
    string repeatLimitedString(string s, int repeatLimit) {
        map<char,int,greater<char>>mp;
        string ans = "";
        for(int i = 0;i<s.length();i++){
            mp[s[i]]++;
        }
        while(!mp.empty()){
            char ch = mp.begin()->first;
            int freq = mp.begin()->second;
            mp.erase(mp.begin());
            int rep = 0;
            while(freq!=0){
                rep++;
                if(rep>repeatLimit){ //don't push it into ans
                    if(mp.empty())//if map is already empty, simply return ans
                    {
                        return ans;
                    }
                    ans.push_back(mp.begin()->first);//push the next smaller alphabet that is present in the map
                    mp.begin()->second--;//reduce the freq of this smaller element
                    if(mp.begin()->second==0)
                    {
                        mp.erase(mp.begin());
                    }
                    rep = 1;//reset rep to 1 becoz now there is no more continuity
                }
                ans.push_back(ch);
                freq--; 
            }
        }
        return ans;
    }
};
