Given a string arr consisting of lowercase english letters, arrange all its letters in lexicographical order using Counting Sort.

Example 1:

Input:
N = 5
S = "edsab"
Output:
abdes
Explanation: 
In lexicographical order, string will be 
abdes.
Example 2:

Input:
N = 13
S = "geeksforgeeks"
Output:
eeeefggkkorss
Explanation:
In lexicographical order, string will be 
eeeefggkkorss.
Your Task:
This is a function problem. You only need to complete the function countSort() that takes string arr as a parameter and returns the sorted string. The printing is done by the driver code.

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(N).

Constraints:
1 ≤ N ≤ 105
----------------------------------------------------
class Solution{
    public:
string countSort(string str){
         int count[26];
         string res="";
         for(int i=0;i<26;i++)
         {
             count[i]=0;
         }
         for(int i=0;i<str.length();i++)
         {
             count[str[i]-97]++;
         }
         for(int i=1;i<26;i++)
         {
             count[i]=count[i]+count[i-1];
         }
         char output[str.length()];
         for(int i=str.length()-1;i>=0;i--)
         {
             output[count[str[i]-97]-1]=str[i];
             count[str[i]-97]--;
         }
         for(int i=0;i<str.length();i++)
         {
             res=res+output[i];
         }
         return res;
    }
};
