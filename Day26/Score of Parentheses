Given a balanced parentheses string s, return the score of the string.

The score of a balanced parentheses string is based on the following rule:

"()" has score 1.
AB has score A + B, where A and B are balanced parentheses strings.
(A) has score 2 * A, where A is a balanced parentheses string.
 

Example 1:

Input: s = "()"
Output: 1
Example 2:

Input: s = "(())"
Output: 2
Example 3:

Input: s = "()()"
Output: 2
 

Constraints:

2 <= s.length <= 50
s consists of only '(' and ')'.
s is a balanced parentheses string.
-----------------------------------------------------
class Solution {
public:
    int scoreOfParentheses(string s) {
        int prod = 1;
        int ans = 0;
        int n = s.length();
        int i = 0;
        while(i<n)
        {
            if(s[i]=='(') 
            {
               prod = prod<<1;//we must multiply by 2 whenever we encounter '('
            }
            else
            {
                prod = prod>>1;//we must divide by 2 whenever we encounter ')'
                if(s[i-1]=='(') ans = ans + prod;//as we have reached a core pair, sow e must multiply count by 2 
            }
            i++;
        }
       return ans;
    }
};
