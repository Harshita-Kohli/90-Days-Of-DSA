class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
      vector<vector<int>> ans;
        priority_queue<pair<int,pair<int,int>>>maxh;//we take maxheap becoz we wanna find the point that are k closest to origin
        int dist = 0;
        for(int i = 0;i<points.size();i++){
        dist = points[i][0]*points[i][0]+points[i][1]*points[i][1];//distance of the point form origin
            maxh.push({dist,{points[i][0],points[i][1]}});
            if(maxh.size()>k)
            {
                maxh.pop();
            }
        }
        while(!maxh.empty())
        {
            ans.push_back({maxh.top().second.first , maxh.top().second.second});
            maxh.pop();
        }
        return ans;
    }
};
